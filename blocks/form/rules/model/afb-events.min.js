/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2022 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.

* Adobe permits you to use and modify this file solely in accordance with
* the terms of the Adobe license agreement accompanying it.
*************************************************************************/

class s{_metadata;_type;_payload;_target;constructor(s,t,e){this._metadata=e,this._payload=s,this._type=t}get type(){return this._type}get payload(){return this._payload}get metadata(){return this._metadata}get target(){return this._target}get isCustomEvent(){return!1}payloadToJson(){return this.payload}toJson(){return{payload:this.payloadToJson(),type:this.type,isCustomEvent:this.isCustomEvent}}toString(){return JSON.stringify(this.toJson())}}class t extends s{constructor(s,t=!1){super(s,"change",{dispatch:t})}withAdditionalChange(s){return new t(this.payload.changes.concat(s.payload.changes),this.metadata)}}class e extends s{constructor(s={}){super(s,"invalid",{})}}class r extends s{constructor(s={}){super(s,"valid",{})}}class a extends s{constructor(s={},t=!1){super(s,"executeRule",{dispatch:t})}}const c=(s,e,r)=>new t({changes:[{propertyName:s,currentValue:e,prevValue:r}]});class n extends s{constructor(s,t=!1){super(s,"initialize",{dispatch:t})}}class o extends s{constructor(){super({},"load",{dispatch:!1})}}class u extends s{constructor(s,t=!1){super(s,"click",{dispatch:t})}}class d extends s{constructor(s,t=!1){super(s,"blur",{dispatch:t})}}class p extends s{constructor(s,t=!1){super(s,"validationComplete",{dispatch:t})}}class i extends s{constructor(){super({},"focus",{dispatch:!1})}}class l extends s{constructor(s,t=!1){super(s,"submit",{dispatch:t})}}class h extends s{constructor(s,t=!1){super(s,"submitSuccess",{dispatch:t})}}class x extends s{constructor(s,t=!1){super(s,"submitFailure",{dispatch:t})}}class m extends s{constructor(s,t=!1){super(s,"submitError",{dispatch:t})}}class g extends s{constructor(s,t=!1){super(s,"reset",{dispatch:t})}}class y extends s{constructor(s,t){super({field:t,changes:s},"fieldChanged")}}class _ extends s{constructor(s,t={},e=!1){super(t,s,{dispatch:e})}get isCustomEvent(){return!0}}class v extends s{constructor(s){super(s,"addItem")}}class C extends s{constructor(s){super(s,"removeItem")}}class b extends s{constructor(s){super(s,"addInstance")}}class E extends s{constructor(s){super(s,"removeInstance")}}export{b as AddInstance,v as AddItem,d as Blur,t as Change,u as Click,_ as CustomEvent,a as ExecuteRule,y as FieldChanged,i as Focus,o as FormLoad,n as Initialize,e as Invalid,E as RemoveInstance,C as RemoveItem,g as Reset,l as Submit,m as SubmitError,x as SubmitFailure,h as SubmitSuccess,r as Valid,p as ValidationComplete,c as propertyChange};
